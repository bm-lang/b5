# Raise / Rescue

# @IMPORT types.b5

TYPE String

TYPE RuntimeError
FIELDS message AS String

PROC RuntimeError_constructor_new
PARAMS arg AS String
RETURNS RuntimeError
BODY BEGIN
  DECLARE result AS RuntimeError
  SET REF result END VALUE NEW RuntimeError
  SET REF result PICK message END VALUE REF arg END
  RETURN REF result END
END

PROC raise_rescue
BODY BEGIN
  DECLARE i AS int32
  SET REF i END VALUE LITERAL `0` AS int32
  LOOP BEGIN
    IF NOT LT REF i END WITH LITERAL `100` AS int32
    THEN JUMP loop_1

    DECLARE error AS RuntimeError

    IF EQ REF i END WITH LITERAL `23` AS int32
    THEN BEGIN
      SET REF error END VALUE FETCH RuntimeError_constructor_new ARG LITERAL `I don't like 23` AS String END
      JUMP rescue_1
    END

    MARK rescue_1
    IF IS REF error END OF RuntimeError
    THEN BEGIN
      # I don't care
    END

    SET REF i END VALUE ADD REF i END WITH LITERAL `1` AS int32
  END
  MARK loop_1
END

PROC test MAIN
BODY BEGIN
  DECLARE x AS int32

  SET REF x END VALUE LITERAL `0` AS int32

  IF GT REF x END WITH LITERAL `0` AS int32
  THEN DEBUG `Greater than 0`
  ELSE DEBUG `Less or equal than 0`

  DEBUG `Hello world!`
END